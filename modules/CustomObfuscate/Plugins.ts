export = {
    list: [
        { label: "MinifyAll", description: `This results the code on a single line, no comments, etc...`, value: "MinifiyAll" },
        { label: "Virtualize (VM)", description: `Makes the code harder to reverse-engineer by virtualizing it.`, value: "Virtualize" },
        { label: "EncryptStrings", description: `Encrypts strings into something like local foo = v8('\\x42..')`, value: "EncryptStrings" },
        { label: "MutateAllLiterals", description: `Mutates all numeric literals into basic +/- binary nodes.`, value: "MutateAllLiterals" },
        { label: "MixedBooleanArithmetic", description: `Mutates literals into mixed boolean arithmerics.`, value: "MixedBooleanArithmetic" },
        { label: "JunkifyAllIfStatements", description: `Injects opaque conditions into the if statement.`, value: "JunkifyAllIfStatements" },
        { label: "JunkifyBlockToIf", description: `Turns do/end blocks into opaque if statements.`, value: "JunkifyBlockToIf" },
        { label: "RevertAllIfStatements", description: `This will invert all if statements to create funny looking ones.`, value: "RevertAllIfStatements" },
        { label: "ControlFlowFlattenAllBlocks", description: `Injects basic while loops with a state counter.`, value: "ControlFlowFlattenV1AllBlocks" },
        { label: "EncryptFuncDeclaration", description: `Turns the declaration of a (global) function into an encrypted string.`, value: "EncryptFuncDeclaration" },
        { label: "SwizzleLookups", description: `Swizzle lookups, will turn foo.bar into foo['bar'].`, value: "SwizzleLookups" },
        { label: "TableIndirection", description: `Replaces local variables with a table, each varaible is mapped to a table index.`, value: "TableIndirection" },
        { label: "MakeGlobalsLookups", description: `Turns all the globals explicity into these kind if lookups: _G['foo']`, value: "MakeGlobalsLookups" },
        { label: "BasicIntegrity", description: `Adds basic integrity checks into the script.`, value: "BasicIntegrity" },
        { label: "WriteLuaBit32", description: `Addes the 'bit32' in pura Lua for compatibility.`, value: "WriteLuaBit32" },
    ],

    values: {
        "EncryptStrings": [100],
        "MutateAllLiterals": [100],
        "MixedBooleanArithmetic": [100],
        "JunkifyAllIfStatements": [100],
        "JunkifyBlockToIf": [100],
        "ControlFlowFlattenV1AllBlocks": [100],
        "SwizzleLookups": [100],
        "TableIndirection": [100],
        "RevertAllIfStatements": [100],
        "EncryptFuncDeclaration": true,
        "MakeGlobalsLookups": true,
        "BasicIntegrity": true,
        "WriteLuaBit32": true,
        "Virtualize": true,
        "MinifiyAll": true,
        "Minifier": true,
        "Minifier2": true,
    }
}